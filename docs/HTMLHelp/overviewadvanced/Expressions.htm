<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Expressions</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2836>
<meta name=layout-width content=1564>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="..\Hexedit.css">



</head>

<!--(Body)==========================================================-->


<body>

<h2><font style="font-family: Arial;"
			face=Arial>Expressions</font></h2>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Evaluation of C-like expressions 
 was added to <span class=HexEdit>HexEdit</span> to assist in the processing 
 of templates. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->However, 
 expressions can also be used in other areas -- for example, you can type 
 an expression into the hex and decimal jump tools or the calculator to 
 jump to a calculated address.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			font-weight: bold;">Operators</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">The expressions supported are 
 very much like C/C++ expressions with a few inappropriate operators removed. 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Although 
 the operators have the same precedence as in C/C++, their behaviour varies 
 in some ways. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->For 
 example, the + operator can be used to concatenate strings since strings 
 are supported as a primitive type (see the section on Types below). <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->However, 
 for numeric (integer and floating point) operations the operators behave 
 very much as expected.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">The following operators are 
 supported with similar behaviour and the same precedence as in C and C++:</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<!--(Table)=========================================================-->
<!--begin!kadov{{--><div align=left><!--}}end!kadov-->
<table x-use-null-cells
		style="x-cell-content-align: top;
				float: alignleft;
				width: 99.005%;
				border-spacing: 0px;
				border-spacing: 0px;"
		cellspacing=0
		width=99.005%>
<col style="width: 19.4%;">
<col style="width: 80.6%;">

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-width: 1px;
			border-left-color: #000000;
			border-left-style: Solid;
			border-right-width: 1px;
			border-right-color: #000000;
			border-right-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #000000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;
			border-top-width: 1px;
			border-top-color: #000000;
			border-top-style: Solid;"
	bgcolor=#C0C0C0
	width=19.4%>
<p style="font-weight: bold;">Operator(s)</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-width: 1px;
			border-right-color: #000000;
			border-right-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #000000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;
			border-top-width: 1px;
			border-top-color: #000000;
			border-top-style: Solid;"
	width=80.6%>
<p style="font-weight: bold;">Meaning</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>[ ]</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p>array indexing</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>( )</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p>nested expression</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>.</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p>struct member access (templates only)</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>+ <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->-</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p>unary plus and minus</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>!</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p style="margin-top: 0; margin-bottom: 0;">logical NOT</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>~</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p style="margin-top: 0; margin-bottom: 0;">bitwise NOT</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>* <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->/ <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->%</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p style="margin-top: 0; margin-bottom: 0;">multiply, divide and remainder</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>+ <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->-</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p style="margin-top: 0; margin-bottom: 0;">addition, subtraction (see 
 Note 2)</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>&lt;&lt; <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->&gt;&gt;</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p style="margin-top: 0; margin-bottom: 0;">bit-wise shifts</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>&amp;</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p style="margin-top: 0; margin-bottom: 0;">bit-wise AND</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>^</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p style="margin-top: 0; margin-bottom: 0;">bit-wise exclusive OR</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>|</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p>bit-wise OR</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>&lt; <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->&lt;= 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->&gt; <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->&gt;=</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p>comparisons (for strings, integers, dates and floating point)</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>== <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->!=</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p>equality, inequality (for strings, integers, dates and floating point)</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>&amp;&amp;</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p>logical AND</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>||</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p>logical OR</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>? :</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p>conditional (ternary) operator</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>=</td>
<td colspan=1
	rowspan=1
	style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p>assignment</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 19.4%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=19.4%>
<p>,</td>
<td style="width: 80.6%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=80.6%>
<p style="margin-top: 0; margin-bottom: 0;">sequence (comma) operator</td></tr>
</table>
<!--begin!kadov{{--></div><!--}}end!kadov-->
<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Note: the assignment operators 
 (+=, etc), except for normal assignment (=) are <span style="font-weight: bold;">not</span> 
 implemented. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Of 
 course, they are just a shortcut so are not essential. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->For 
 example use &quot;a = a + 1&quot; instead of &quot; a+= 1&quot;.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Note 2: The + operator can 
 be used to concatenate strings. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->The 
 - and + operators can also be used with dates: subtracting dates returns 
 a difference as a floating point value (which is the number of days between 
 the dates), you can add an integer or floating point value to a date to 
 get a new date (or even add two date values together).</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			font-weight: bold;">Functions</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Expressions also support the 
 following built-in &quot;functions&quot;:</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<!--(Table)=========================================================-->
<!--begin!kadov{{--><div align=left><!--}}end!kadov-->
<table x-use-null-cells
		style="x-cell-content-align: top;
				float: alignleft;
				width: 98.91%;
				border-spacing: 0px;
				border-spacing: 0px;"
		cellspacing=0
		width=98.91%>
<col style="width: 9.831%;">
<col style="width: 60.995%;">
<col style="width: 29.174%;">

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-width: 1px;
			border-left-color: #000000;
			border-left-style: Solid;
			border-right-width: 1px;
			border-right-color: #000000;
			border-right-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #000000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;
			border-top-width: 1px;
			border-top-color: #000000;
			border-top-style: Solid;"
	bgcolor=#C0C0C0
	width=9.831%>
<p style="font-weight: bold;">Function</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-width: 1px;
			border-right-color: #000000;
			border-right-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #000000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;
			border-top-width: 1px;
			border-top-color: #000000;
			border-top-style: Solid;"
	width=60.995%>
<p style="font-weight: bold;">Returns</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-width: 1px;
			border-right-color: #000000;
			border-right-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #000000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;
			border-top-width: 1px;
			border-top-color: #000000;
			border-top-style: Solid;"
	width=29.174%>
<p style="font-weight: bold;">Operand(s)</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>sizeof</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>size of a template element in bytes (returns integer)</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>any file element</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>addressof</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>address in the file of the first byte of an template element (integer)</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>any file element</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>defined</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>is a template element defined</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>name of the element</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>getbool</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>true or false depending on which button the user selected</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>string (prompt), then optionally:</p>
<p><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->string 
 (true button), string (false button)</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>getint</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>integer entered by the user</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>string (prompt), then optionally:</p>
<p><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->int (default 
 value), int (min), int (max)</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>getstring</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>string entered by the user</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>string (prompt), then optionally:</p>
<p>string (default value)</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>abs</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>absolute value (return type = type of operand)</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>integer or floating point</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>min</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>minimum of several values (return type = type of operands)</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>integer or floating point</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>max</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>maximum of several values (return type = type of operands)</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>integer or floating point</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>int</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>converts a floating point or boolean to an integer</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>floating point or boolean</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>date</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>converts a date or date+time string to a date type</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>string</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>time</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>converts a string containing a time of day to a date type (with date 
 part set to zero)</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>string</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>year</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>creates a date given a year number</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>integer </td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>month</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>creates a date given a month number</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>integer</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>day</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>creates a date given a day of the month</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>integer</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>hour</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>creates a date type given an hour of the day (0 to 23)</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>integer</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>minute</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>creates a date type given a minute of the hour (0-59)</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>integer</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>second</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>creates a date type given a second of the minute (0-59)</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>integer</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>now</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>returns current date and time of day as a date</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>-</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>rand</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>returns a 64 bit random number</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>-</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>atoi</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>converts a string of digits (with optional sign) to an integer</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>string</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>atof</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>converts string (possibly including sign, decimal point and exponent) 
 to floating point</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>string</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>strlen</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>returns length of string as an integer (for fields does not include 
 terminator if present)</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>string</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>left</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>returns the left digits of a string as an integer</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>string and integer</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>right</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>returns the right digits of a string as an integer</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>string and integer</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>mid</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>given a string, starting position and (optional) length returns a string</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>string, integer and (optional) integer</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>strchr</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>given a string &amp; character, returns the position of the first occurrence 
 (or -1 if not found)</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>string and character (as integer)</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>strstr</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>given a string to search &amp; a string to search for returns 1st occurrence 
 or -1 as integer</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>string and string</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>stricmp</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>compares two strings disregarding case and returns 0, -ve, or +ve integer</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>two strings</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>ebc2asc</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>converts an EBCDIC string to ASCII</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>EBCDIC string</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>asc2ebc</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>converts an ASCII string to EBCDIC</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>string</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>pow</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>raise 1st param. to power of 2nd param. (returns integer if both operands 
 are integer)</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>integer or floating point</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>sqrt</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>returns the square root of a number as a floating point</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>floating point</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>sin</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>returns the sine of a number (radians) as a floating point </td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>floating point</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>cos</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>returns the cosine of a number (radians) as a floating point</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>floating point</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>tan</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>returns the tan of a number (radians) as a floating point</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>floating point</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>asin</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>returns the arcsine of a number as a floating point (radians) </td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>floating point</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>acos</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>returns the arcosine of a number as a floating point (radians) </td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>floating point</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>atan</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>returns the arctangent of a number as a floating point (radians) </td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>floating point</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>exp</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>returns the number raised to a power of e as a floating point</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>floating point</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td colspan=1
	rowspan=1
	style="width: 9.831%;
			background-color: #c0c0c0;
			border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	bgcolor=#C0C0C0
	width=9.831%>
<p>log</td>
<td colspan=1
	rowspan=1
	style="width: 60.995%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=60.995%>
<p>returns the log (base 10) of a number as a floating point</td>
<td colspan=1
	rowspan=1
	style="width: 29.174%;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=29.174%>
<p>floating point</td></tr>
</table>
<!--begin!kadov{{--></div><!--}}end!kadov-->
<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Note that addressof only makes 
 sense in expressions used in templates. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->It 
 should not be used in other expressions such as the hex and decimal jump 
 tools.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Also note that you can add 
 dates together so you can use the year, month, etc functions to build 
 a date from component parts, eg day(16) + month(7) + year(1999) gives 
 the date of July 16 1999 (with time of day zero or midnight).</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			font-weight: bold;">Types</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">There are 5 basic primitive 
 types: integer, floating point, boolean, string and date. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->All 
 integer operations are performed using 64-bit integers; all floating point 
 using 64-bit IEEE floating point numbers.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Strings are supported as a 
 primitive type (unlike C). <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->You 
 can assign (=), concatenate (+) and compare (&lt;, &lt;=, == etc) strings.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Dates are a primitive type 
 that can be used to store a date and/or time. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->You 
 can compare two dates. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->You 
 can also add/subtract a value (integer or floating point) to a date which 
 adds the specified number of days. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->You 
 need to use floating point values to adjust the time -- eg. add 1.0/24.0 
 to add one hour to a date/time value. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->You 
 can create a date using the new built-in &quot;date&quot; function which 
 just takes a string containing a date or date and time.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Expressions are more strongly 
 type-checked than expressions in C/C++. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->For 
 example, comparison and boolean operators return a boolean type which 
 cannot be used as an integer (unless converted using the int() function). 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->As another 
 example, the first operand of the conditional (?:) operator must be boolean 
 and the 2nd and 3rd must be of the same type. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->But 
 note that <span style="font-weight: bold;">an integer value will be automatically 
 converted to a floating point</span> when necessary.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">When evaluating templates all 
 integers are converted to 64-bit signed values before use in an expression; 
 floats are converted to 64-bit IEEE values.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			font-weight: bold;">Variables</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">New variables are not declared, 
 but are created on first use. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Assigning 
 a value to a name will create a global variable of that name if it does 
 not already exist. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->The 
 type of the variable is the type of the expression assigned to it.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;"><img src="../tip.gif"
												style="border-style: none;
														border: none;
														width: 31px;
														height: 12px;"
												width=31
												height=12
												border=0>When hex constants 
 are allowed (see <span style="font-weight: bold;">Constants</span> below) 
 it can be ambiguous whether letters refer to a variable identifier or 
 a hex constant. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->This 
 can happen in the hex jump tool or the calculator in Hex base mode. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->An 
 example is the expression &quot;A = A &amp; FF&quot;. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->In 
 this case a variable name can be prefixed with '@' to avoid the ambiguity 
 (eg &quot;@A = @A &amp; FF&quot;);</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">When expressions are used in 
 a template (see <a HREF="Template_Files.htm">Template Files</a>) there 
 are facilities for accessing any value of the file encountered up to that 
 point. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->(Note 
 that you can use but not assign to these &quot;variables&quot;.) <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->The 
 syntax is identical to accessing structure members and array elements 
 in C/C++. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Members 
 of a &quot;STRUCT&quot; are accessed using the dot operator. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Elements 
 of a &quot;FOR&quot; are accessed using the array access operator (ie 
 an integer index in square brackets).</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">In some uses of expressions 
 in templates a special variable called &quot;this&quot; can be evaluated. 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->It refers 
 to the current element.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			font-weight: bold;"><span style="font-weight: bold;">Arrays</span></p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">The array indexing operator 
 (square brackets) is used in 4 situations: first you can create and access 
 array variables (see below); you also use the same syntax to access sub-elements 
 of a FOR in a template; you can use array indexing to access individual 
 characters in a string, or use it to access individual bytes of elements 
 with type &quot;none&quot; in a template. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Note 
 that all indexing is zero-based like C/C++, ie the &quot;first&quot; element 
 has an index of zero.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Array elements can be created 
 and used just like other global variables. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Note 
 that assigning to an array element does not result in any other array 
 elements being created, and in fact, different elements of the same array 
 may have different types. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Syntactically 
 arrays are accessed just like in C/C++ using an integer index (any expression 
 that evaluates to an integer) enclosed in square brackets.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Sparse arrays are efficiently 
 stored because individual array elements are only created when first assigned 
 to. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Multi-dimensional 
 arrays to any depth are supported. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->For 
 example:</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			margin-left: 40px;">a[i][j] = &quot;string&quot;</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			margin-left: 40px;">&nbsp;</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			margin-left: 0px;">In the above expression if a variable called 
 &quot;a&quot; does not already exist it is created as a 2-dimensional 
 array. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Then 
 if the element of the array &quot;a&quot; at (i,j) does not exist it is 
 created, otherwise any existing value is overwritten.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			font-weight: bold;">Constants</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">The following constants (sometimes 
 called literals in C/C++ documentation) are supported in expressions:</p>

<ul style="list-style: disc;"
	type=disc>
	
	<li class=kadov-p><p style="margin-top: 0; margin-bottom: 0;">Integer: 
 decimal and hex constants (as in C/C++) are allowed, character constants 
 (eg 'c') also evaluate to an integer</p></li>
	
	<li class=kadov-p><p style="margin-top: 0; margin-bottom: 0;">Floating 
 point: normal floating point formats are supported (ie, using e or E to 
 signal an exponent)</p></li>
	
	<li class=kadov-p><p style="margin-top: 0; margin-bottom: 0;">Boolean: 
 the values true and false only are supported</p></li>
	
	<li class=kadov-p><p style="margin-top: 0; margin-bottom: 0;">String: 
 string constants are enclosed in double-quotes</p></li>
	
	<li class=kadov-p><p style="margin-top: 0; margin-bottom: 0;">Date: 
 there are no date constants but dates are easily created from a string 
 constants using the &quot;date&quot; function</p></li>
</ul>

<p style="margin-top: 0; margin-bottom: 0;"><img src="../tip.gif"
												style="border-style: none;
														border: none;
														width: 31px;
														height: 12px;"
												width=31
												height=12
												border=0>An integer constant 
 consisting of only decimal digits will be interpreted as a <span style="font-weight: bold;">hex</span> 
 number even when not preceded by the usual &quot;0x&quot; when used in 
 the hex address tool or the calculator in Hex mode. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->The 
 same number will be interpreted as decimal in the decimal address tool.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			font-weight: bold;">Hex and Decimal Jump Tools</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">The jump tools (see <a HREF="..\tools\HIDC_JUMP_HEX.htm">Hex 
 Address tool</a> and <a HREF="..\tools\HIDC_JUMP_DEC.htm">Decimal Address 
 tool</a>) can now take an expression. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->This 
 expression can create and assign to global variables (including array 
 elements) and use all the operators and types discussed above but the 
 result of the expression must evaluate to an integer.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p>Numeric constants in expressions entered into the hex and decimal jump 
 tools are treated as hex or decimal numbers respectively. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->So 
 if you enter a hexadecimal number into the decimal jump tool you will 
 get a syntax error. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Note 
 that this means you cannot use variable names that are hex constants even 
 though they would appear to be OK (eg &quot;a=10&quot;). <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->You 
 cannot create variables with names that only consist of the characters 
 A-F (and 0-9) even in the decimal jump tool as the name would be considered 
 a hex constant if you tried to use the variable in the hex jump tool. 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->You can 
 use variable names that start with A-F as long as they include characters 
 in the range G-Z.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 0; margin-bottom: 0;">Although you can use &quot;global&quot; 
 variables you cannot use &quot;variables&quot; created in a template in 
 the jump tools, but you can use bookmarks of the current file. <!--kadov_tag{{<spaces>}}-->&nbsp;<span 
 style="margin-top: 0; margin-bottom: 0;"><!--kadov_tag{{</spaces>}}-->Note 
 that the sizeof, addressof, defined and dot-operator (for access to structure 
 members) are only useful in template expressions and will generate an 
 error.</span></p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="font-weight: bold;">For further information see:</p>

<p><a href="Template_Files.htm">Template Files</a> for more information 
 on using expressions in templates</p>

<p><a href="..\tools\HIDC_JUMP_HEX.htm">Hex Address tool</a> for using 
 expressions to jump to a hex address</p>

<p><a href="..\tools\HIDC_JUMP_DEC.htm">Decimal Address tool</a> for using 
 expressions to jump to a decimal address</p>

<p>&nbsp;</p>

</body>

</html>
